// Note: all code in the __base-includes folder should not generate any actual CSS since these files are used in every block and would generated redundant CSS. These are files purely for declaring variables, mixins, and functions.

@mixin button() {
	@include link-1(false);

	display: inline-flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: rem(10 30);
	text-align: center;
	cursor: pointer;
	-webkit-appearance: none;
	appearance: none;
	transition: color $transition-standard, background-color $transition-standard, border $transition-standard;
}

@mixin button-small() {
	@include link-2(false);

	padding: rem(4 14);
}

@mixin button-primary() {
	@include button();

	color: paint(text);
	letter-spacing: 1.5px;
	border: 2px solid paint(button-default);
	background-color: paint(button-default);

	@include media-breakpoint-down(xs) {
		width: 100%;
	}

	@include alt-button-selectors {
		color: paint(neutral-0);
		border-color: paint(button-default);
		background-color: paint(button-default);

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(neutral-0);
			border-color: paint(button-hover);
			background-color: paint(button-hover);
		}
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(neutral-0);
		border-color: paint(button-hover);
		background-color: paint(button-hover);
	}

	.bg-white & {
		color: paint(white);
		border: 2px solid paint(button-default);
		background-color: paint(button-default);

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(neutral-0);
			border-color: paint(button-hover);
			background-color: paint(button-hover);
		}
	}
}

@mixin button-secondary() {
	@include button();

	color: paint(neutral-0);
	border: 2px solid paint(neutral-0);
	background-color: transparent;

	@include media-breakpoint-down(xs) {
		width: 100%;
	}

	@include alt-button-selectors {
		color: paint(white);
		border-color: paint(white);

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(neutral-0);
			border-color: paint(button-hover);
			background-color: paint(button-hover);
		}
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(neutral-0);
		border-color: paint(button-hover);
		background-color: paint(button-hover);
	}

	.bg-white & {
		color: paint(button-default);
		border: 2px solid paint(button-default);
		background-color: transparent;

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(white);
			border-color: paint(button-hover);
			background-color: paint(button-hover);
		}
	}
}

@mixin button-tertiary() {
	@include button();

	position: relative;
	padding: rem(8) 0 !important;
	color: paint(neutral-8);
	letter-spacing: 1.5px;
	border: none;
	border-radius: 0;
	background-color: transparent;

	@include alt-button-selectors {
		color: paint(white);

		&::before,
		&::after {
			color: paint(button-hover);
		}

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(button-hover);

			&::before,
			&::after {
				color: paint(button-hover);
				background-color: paint(button-hover);
			}
		}
	}

	&::before {
		position: absolute;
		left: 0;
		bottom: 0;
		content: "";
		width: 100%;
		height: rem(2);
		background-color: paint(button-default);
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(neutral-0);

		&::before {
			background-color: paint(button-hover);
		}
	}

	.bg-white & {
		color: paint(button-default);

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(button-hover);
		}
	}
}

@mixin button-play() {
	display: flex;
	justify-content: center;
	align-items: center;
	width: rem(56);
	height: rem(56);
	padding: 0;
	color: paint(text, true);
	border: 2px solid paint(button-default);
	border-radius: 50%;
	background-color: paint(button-default);
	cursor: pointer;
	-webkit-appearance: none;
	appearance: none;
	transition: background-color $transition-standard, color $transition-standard, border-color $transition-standard;

	@include alt-button-selectors {
		&.c-btn--secondary {
			color: paint(white);
			border-color: paint(white);
			background-color: transparent;
		}
	}

	&::before {
		@include icon-font($icon-play, #{rem(24)});

		pointer-events: none;
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(text, true);
		border-color: paint(button-hover);
		background-color: paint(button-hover);
	}

	&.c-btn--secondary {
		color: paint(text, true);
		border-color: paint(text, true);
		background-color: transparent;

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(text, true);
			border-color: paint(button-default);
			background-color: paint(button-default);
		}
	}
}

@mixin button-close() {
	display: flex;
	justify-content: center;
	align-items: center;
	width: rem(32);
	height: rem(32);
	padding: 0;
	color: paint(text, true);
	border: 2px solid paint(text, true);
	border-radius: 50%;
	background-color: transparent;
	cursor: pointer;
	-webkit-appearance: none;
	appearance: none;
	transition: background-color $transition-standard, color $transition-standard, border-color $transition-standard;

	@include alt-button-selectors("&.c-btn--color-alt") {
		color: paint(white);
		border-color: paint(white);

		&.hover,
		a:hover &,
		a:focus &,
		&:hover,
		&:focus {
			color: paint(white);
			border-color: paint(neutral-16);
			background-color: paint(neutral-16);
		}
	}

	&::before {
		@include icon-font($icon-close, #{rem(16)});

		pointer-events: none;
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(text, true);
		border-color: paint(neutral-88);
		background-color: paint(neutral-88);
	}
}

@mixin button-social() {
	display: inline-flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	padding: rem(10);
	color: paint(text, true);
	font-size: 0;
	line-height: 0;
	text-align: center;
	border: 2px solid paint(button-default);
	border-radius: rem(1600);
	background-color: transparent;
	cursor: pointer;
	-webkit-appearance: none;
	appearance: none;
	transition: border-color $transition-standard, color $transition-standard, background-color $transition-standard;

	@include alt-button-selectors {
		color: paint(white);
		border-color: paint(button-default);
	}

	&::after {
		margin: 0;
		font-size: rem(24);
		transform: none;
	}

	&.hover,
	a:hover &,
	a:focus &,
	&:hover,
	&:focus {
		color: paint(text, true);
		border-color: paint(button-default);
		background-color: paint(button-default);
	}

	.block-editor-block-list__block & {
		font-size: rem(14);
		line-height: 1.4;

		&::before {
			content: "Screen Reader Label:" !important;
			display: block !important;
			font-size: rem(10);
		}
	}
}
